#uselib "user32.dll"
	#cfunc GetDC "GetDC" int
	#func  ReleaseDC "ReleaseDC" int
	#func  GetClientRect "GetClientRect" int, int
	#func  SetWindowLong "SetWindowLongA" int, int, int
	#func  GetCursorPos "GetCursorPos" int
	#cfunc WindowFromPoint "WindowFromPoint" int, int
	#func  GetWindowText "GetWindowTextA" int, int, int
	#func  DrawFocusRect "DrawFocusRect" int, int
	#func  InvertRect "InvertRect" int, int

#uselib "gdi32.dll"
	#func  StretchBlt "StretchBlt" int, int,int, int, int, int, int, int, int, int, int

#packopt name "switcher"

#define WS_CHILD           0x40000000
#define WS_VISIBLE         0x10000000
#define WS_GROUP           0x00020000
#define BS_AUTORADIOBUTTON 0x00000009
#define WM_LBUTTONDOWN     0x00000201
#define WM_NCLBUTTONDOWN   0x000000A1
#define HTCAPTION          0x00000002

#define ASPECT     (4.0 / 3.0)
#define WIN_WIDTH  1440
#define WIN_HEIGHT 550

#enum WIN_SW = 0
#enum WIN_BUF1
#enum WIN_BUF2
#enum WIN_BUF3
#enum WIN_OUT1
#enum WIN_OUT2

	dim mousexy, 2
	dim rect, 4
	sdim cur_title, 256
	dimtype cur_aspect, vartype("double")
	dim chk

	dim chk_a
	dim chk_b
	dim chk_c

	dim chk_1_1
	dim chk_1_2
	dim chk_1_3
	dim chk_1_4
	dim chk_2_1
	dim chk_2_2
	dim chk_2_3
	dim chk_2_4

	dim target_hwnd, 3
	dim target_hdc, 3
	dim target_w, 3
	dim target_h, 3
	dim out_w, 2
	dim out_h, 2

	// 出力画面のサイズ
	out_w = 800, 800
	out_h = 600, 600

	sdim dispnum, 3, 9
	dispnum = "①", "②", "③", "④", "⑤", "⑥", "⑦", "⑧", "⑨"

	dim win_id, 2
	dim win_hdc
	dim out_hwnd, 2
	dim out_hdc, 2
	dim status, 2

	win_id(0) = WIN_OUT1
	win_id(1) = WIN_OUT2

	// 操作ウィンドウ
	screen WIN_SW, WIN_WIDTH, WIN_HEIGHT
	gsel WIN_SW, 2
	win_hdc = hdc

	repeat 3
		i = cnt
		p_hwnd = 0

		repeat
			redraw 0
			
			color 255, 255, 255
			boxf
			color 0, 0, 0
			pos 0, 0
			mes "入力" + (i + 1)
			mes "(Ctrlで確定)"
			mes ""

			// マウスカーソル下のウィンドウを取得
			GetCursorPos varptr(mousexy)
			target_hwnd(i) = WindowFromPoint(mousexy(0), mousexy(1))
			GetWindowText target_hwnd(i), varptr(cur_title), 256

			mes "" + mousexy(0) + ", " + mousexy(1)
			mes cur_title

			redraw 1

			// Ctrlが押されたら確定
			stick key, 0, 0
			if (key & 64): break
			await 10
		loop

		// ウィンドウを登録
		GetClientRect target_hwnd(i), varptr(rect)
		target_w(i) = rect(2)
		target_h(i) = rect(3)
		target_hdc(i) = GetDC(target_hwnd(i))
	loop

	// バッファウィンドウ
	buffer WIN_BUF1, target_w(0), target_h(0)
	buffer WIN_BUF2, target_w(1), target_h(1)
	buffer WIN_BUF3, target_w(2), target_h(2)

	// 出力ウィンドウ
	bgscr WIN_OUT1, out_w(0), out_h(0)
	out_hwnd(0) = hwnd
	out_hdc(0) = hdc
	oncmd gosub *move1, WM_LBUTTONDOWN

	bgscr WIN_OUT2, out_w(1), out_h(1)
	out_hwnd(1) = hwnd
	out_hdc(1) = hdc
	oncmd gosub *move2, WM_LBUTTONDOWN

	// ボタン描画
	gsel WIN_SW

	objsize WIN_WIDTH / 3 - 20, 50
	
	pos WIN_WIDTH / 6 * 1 - WIN_WIDTH / 6 + 10, WIN_HEIGHT - 180
	chkbox "A", chk
	objprm stat, 1
	SetWindowLong objinfo(stat, 2), -16, WS_CHILD | WS_VISIBLE | WS_GROUP | BS_AUTORADIOBUTTON
	
	pos WIN_WIDTH / 6 * 3 - WIN_WIDTH / 6 + 10, WIN_HEIGHT - 180
	chkbox "B", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9
	
	pos WIN_WIDTH / 6 * 5 - WIN_WIDTH / 6 + 10, WIN_HEIGHT - 180
	chkbox "C", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9
	
	objsize WIN_WIDTH / 12 - 20, 50
	
	pos WIN_WIDTH / 12 * 0 + 10, WIN_HEIGHT - 120
	chkbox "1", chk
	objprm stat, 1
	SetWindowLong objinfo(stat, 2), -16, WS_CHILD | WS_VISIBLE | WS_GROUP | BS_AUTORADIOBUTTON
	
	pos WIN_WIDTH / 12 * 1 + 10, WIN_HEIGHT - 120
	chkbox "2", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9
	
	pos WIN_WIDTH / 12 * 2 + 10, WIN_HEIGHT - 120
	chkbox "3", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 3 + 10, WIN_HEIGHT - 120
	chkbox "暗転", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 0 + 10, WIN_HEIGHT - 60
	chkbox "1", chk
	objprm stat, 1
	SetWindowLong objinfo(stat, 2), -16, WS_CHILD | WS_VISIBLE | WS_GROUP | BS_AUTORADIOBUTTON
	
	pos WIN_WIDTH / 12 * 1 + 10, WIN_HEIGHT - 60
	chkbox "2", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9
	
	pos WIN_WIDTH / 12 * 2 + 10, WIN_HEIGHT - 60
	chkbox "3", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 3 + 10, WIN_HEIGHT - 60
	chkbox "暗転", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 4 + 10, WIN_HEIGHT - 120
	chkbox "1", chk
	objprm stat, 1
	SetWindowLong objinfo(stat, 2), -16, WS_CHILD | WS_VISIBLE | WS_GROUP | BS_AUTORADIOBUTTON
	
	pos WIN_WIDTH / 12 * 5 + 10, WIN_HEIGHT - 120
	chkbox "2", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9
	
	pos WIN_WIDTH / 12 * 6 + 10, WIN_HEIGHT - 120
	chkbox "3", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 7 + 10, WIN_HEIGHT - 120
	chkbox "暗転", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 4 + 10, WIN_HEIGHT - 60
	chkbox "1", chk
	objprm stat, 1
	SetWindowLong objinfo(stat, 2), -16, WS_CHILD | WS_VISIBLE | WS_GROUP | BS_AUTORADIOBUTTON
	
	pos WIN_WIDTH / 12 * 5 + 10, WIN_HEIGHT - 60
	chkbox "2", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9
	
	pos WIN_WIDTH / 12 * 6 + 10, WIN_HEIGHT - 60
	chkbox "3", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 7 + 10, WIN_HEIGHT - 60
	chkbox "暗転", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 8 + 10, WIN_HEIGHT - 120
	chkbox "1", chk
	objprm stat, 1
	SetWindowLong objinfo(stat, 2), -16, WS_CHILD | WS_VISIBLE | WS_GROUP | BS_AUTORADIOBUTTON
	
	pos WIN_WIDTH / 12 * 9 + 10, WIN_HEIGHT - 120
	chkbox "2", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9
	
	pos WIN_WIDTH / 12 * 10 + 10, WIN_HEIGHT - 120
	chkbox "3", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 11 + 10, WIN_HEIGHT - 120
	chkbox "暗転", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 8 + 10, WIN_HEIGHT - 60
	chkbox "1", chk
	objprm stat, 1
	SetWindowLong objinfo(stat, 2), -16, WS_CHILD | WS_VISIBLE | WS_GROUP | BS_AUTORADIOBUTTON
	
	pos WIN_WIDTH / 12 * 9 + 10, WIN_HEIGHT - 60
	chkbox "2", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9
	
	pos WIN_WIDTH / 12 * 10 + 10, WIN_HEIGHT - 60
	chkbox "3", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	pos WIN_WIDTH / 12 * 11 + 10, WIN_HEIGHT - 60
	chkbox "暗転", chk
	objprm stat, 0
	sendmsg objinfo(stat, 2), $F4, $9

	// 動画再生
	repeat
		gsel WIN_SW

		sendmsg objinfo(0, 2), $F0
		chk_a = stat
		sendmsg objinfo(1, 2), $F0
		chk_b = stat
		sendmsg objinfo(2, 2), $F0
		chk_c = stat
		
		if (chk_a) {
			sendmsg objinfo(3, 2), $F0
			chk_1_1 = stat
			sendmsg objinfo(4, 2), $F0
			chk_1_2 = stat
			sendmsg objinfo(5, 2), $F0
			chk_1_3 = stat
			sendmsg objinfo(6, 2), $F0
			chk_1_4 = stat
			
			sendmsg objinfo(7, 2), $F0
			chk_2_1 = stat
			sendmsg objinfo(8, 2), $F0
			chk_2_2 = stat
			sendmsg objinfo(9, 2), $F0
			chk_2_3 = stat
			sendmsg objinfo(10, 2), $F0
			chk_2_4 = stat
		} else: if (chk_b) {
			sendmsg objinfo(11, 2), $F0
			chk_1_1 = stat
			sendmsg objinfo(12, 2), $F0
			chk_1_2 = stat
			sendmsg objinfo(13, 2), $F0
			chk_1_3 = stat
			sendmsg objinfo(14, 2), $F0
			chk_1_4 = stat
			
			sendmsg objinfo(15, 2), $F0
			chk_2_1 = stat
			sendmsg objinfo(16, 2), $F0
			chk_2_2 = stat
			sendmsg objinfo(17, 2), $F0
			chk_2_3 = stat
			sendmsg objinfo(18, 2), $F0
			chk_2_4 = stat
		} else: if (chk_c) {
			sendmsg objinfo(19, 2), $F0
			chk_1_1 = stat
			sendmsg objinfo(20, 2), $F0
			chk_1_2 = stat
			sendmsg objinfo(21, 2), $F0
			chk_1_3 = stat
			sendmsg objinfo(22, 2), $F0
			chk_1_4 = stat
			
			sendmsg objinfo(23, 2), $F0
			chk_2_1 = stat
			sendmsg objinfo(24, 2), $F0
			chk_2_2 = stat
			sendmsg objinfo(25, 2), $F0
			chk_2_3 = stat
			sendmsg objinfo(26, 2), $F0
			chk_2_4 = stat
		}

		if (chk_1_1) {
			status(0) = 0
		} else: if (chk_1_2) {
			status(0) = 1
		} else: if (chk_1_3) {
			status(0) = 2
		} else: if (chk_1_4) {
			status(0) = 3
		}

		if (chk_2_1) {
			status(1) = 0
		} else: if (chk_2_2) {
			status(1) = 1
		} else: if (chk_2_3) {
			status(1) = 2
		} else: if (chk_2_4) {
			status(1) = 3
		}
		
		redraw 0
		color 0, 0, 0
		boxf 0, 0, WIN_WIDTH, double(WIN_WIDTH) / 3 / ASPECT
		
		repeat 3
			cur_aspect = double(target_w(cnt)) / target_h(cnt)
			
			if (cur_aspect < ASPECT) {
				StretchBlt win_hdc, WIN_WIDTH / 6 * (cnt * 2 + 1) - cur_aspect * WIN_WIDTH / ASPECT / 6, 0, cur_aspect * double(WIN_WIDTH) / 3 / ASPECT, double(WIN_WIDTH) / 3 / ASPECT, target_hdc(cnt), 0, 0, target_w(cnt), target_h(cnt), 0x00CC0020 | 0x40000000
			} else {
				StretchBlt win_hdc, WIN_WIDTH / 3 * cnt, (1.0 / ASPECT - 1.0 / cur_aspect) * WIN_WIDTH / 6, WIN_WIDTH / 3, double(WIN_WIDTH) / 3 / cur_aspect, target_hdc(cnt), 0, 0, target_w(cnt), target_h(cnt), 0x00CC0020 | 0x40000000
			}
			
			// 番号表示
			color 0, 0, 255
			boxf WIN_WIDTH / 3 * cnt, 0, WIN_WIDTH / 3 * cnt + 20, 20
			pos WIN_WIDTH / 3 * cnt + 7, 4
			color 255, 255, 255
			mes cnt + 1
		loop
		
		// 表示している画面番号表示
		repeat 2
			color 255, 0, 0
			boxf WIN_WIDTH / 3 * (status(cnt) + 1) - 20 - (1 - cnt) * 22, 0, WIN_WIDTH / 3 * (status(cnt) + 1) - (1 - cnt) * 22, 20
			pos WIN_WIDTH / 3 * (status(cnt) + 1) - 17 - (1 - cnt) * 22, 4
			color 255, 255, 255
			font msgothic, 14, 1
			mes dispnum(cnt)
		loop
		redraw 1

		repeat 2
			// 操作ウィンドウ選択
			gsel win_id(cnt)
			
			redraw 0

			// 背景消去
			color 0, 0, 0
			boxf

			if (status(cnt) != 3) {
				// アスペクト比
				cur_aspect = double(target_w(status(cnt))) / target_h(status(cnt))

				// 画面出力
				if (cur_aspect < ASPECT) {
					StretchBlt out_hdc(cnt), double(out_w(cnt)) / 2 - cur_aspect * out_h(cnt) / 2, 0, cur_aspect * out_h(cnt), out_h(cnt), target_hdc(status(cnt)), 0, 0, target_w(status(cnt)), target_h(status(cnt)), 0x00CC0020 | 0x40000000
				} else {
					StretchBlt out_hdc(cnt), 0, double(out_h(cnt)) / 2 - double(out_w(cnt)) / cur_aspect / 2, out_w(cnt), double(out_w(cnt)) / cur_aspect, target_hdc(status(cnt)), 0, 0, target_w(status(cnt)), target_h(status(cnt)), 0x00CC0020 | 0x40000000
				}
			}

			redraw 1
		loop

		await 33
	loop

// クライアント領域を掴んで移動
*move1
	if (wparam == 1) {
		sendmsg out_hwnd(0), WM_NCLBUTTONDOWN, HTCAPTION, 0
	}
	return

*move2
	if (wparam == 1) {
		sendmsg out_hwnd(1), WM_NCLBUTTONDOWN, HTCAPTION, 0
	}
	return
